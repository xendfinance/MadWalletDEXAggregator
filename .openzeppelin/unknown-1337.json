{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xE77C501cf0aA127446D5be722A987Dbc1C517aa3",
    "txHash": "0x8556bdb780c2e8d2a1b4949e34dcf1918846e90ea05f1aedd669f061466c676f"
  },
  "proxies": [
    {
      "address": "0x345cA3e014Aaf5dcA488057592ee47305D9B3e10",
      "txHash": "0xe92ba3d06508ceb18d89de2f7b4ef45d4aa54d3ccdf60ba91f57a8ebc3be5fb2",
      "kind": "transparent"
    },
    {
      "address": "0xD683404880ad9c42393914f9F0bFFDADBF8EB2C3",
      "txHash": "0xe7d022ba2bf4cae865d2fcf729a196cf364760b415dbc5dda0e3357bdf7ff8c0",
      "kind": "transparent"
    },
    {
      "address": "0x9F4b7F38182c6288E8b358CC9918CE2004Bb894c",
      "txHash": "0x4ba3dcd303be22000627feefd9b0cd10dda6bd2bdd7407de97d32154deeb6ebf",
      "kind": "transparent"
    }
  ],
  "impls": {
    "da7112dcb02fde3edb38090a38504c331069690446dc4b0653d9d485a09e8afc": {
      "address": "0x18627341F8aE19E2719da006927480a638b5d866",
      "txHash": "0xf1a7e538f1bc1dfd5091015d7abe3f5318444d3f278bba10b7d6329824625743",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "SwapRouter",
            "label": "paraswapRouter",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SwapRouter.sol:145"
          },
          {
            "contract": "SwapRouter",
            "label": "airswapWrapper",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SwapRouter.sol:146"
          },
          {
            "contract": "SwapRouter",
            "label": "zeroExRouter",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SwapRouter.sol:147"
          },
          {
            "contract": "SwapRouter",
            "label": "oneInchRouter",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SwapRouter.sol:148"
          },
          {
            "contract": "SwapRouter",
            "label": "feeAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\SwapRouter.sol:149"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    }
  }
}
